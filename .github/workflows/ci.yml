name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

defaults:
  run:
    shell: bash

jobs:
  build_linux:
    strategy:
      matrix:
        runner: [ubuntu-24.04, ubuntu-24.04-arm]
    runs-on: ${{ matrix.runner }}  
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt update -q
      - run: sudo apt install libopenal-dev xorg-dev libgl1-mesa-dev libglfw3-dev -y --allow-unauthenticated
      - run: make


  build_osx:
    strategy:
      matrix:
        runner: [macos-latest, macos-13]
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
      - run: make

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - run: echo "WARCH=WIN64" >> $GITHUB_ENV
      - run: echo "OPENAL_VERSION=1.24.2" >> $GITHUB_ENV
      - run: echo "GLFW_VERSION=3.4" >> $GITHUB_ENV
      - run: choco install wget --ignore-checksums
      - run: mkdir lib
      - run: wget --no-check-certificate http://www.openal-soft.org/openal-binaries/openal-soft-$OPENAL_VERSION-bin.zip
      - run: 7z x openal-soft-$OPENAL_VERSION-bin.zip -o/c/
      - run: cp /c/openal-soft-$OPENAL_VERSION-bin/libs/$WARCH/* ./lib
      - run: cp /c/openal-soft-$OPENAL_VERSION-bin/bin/$WARCH/soft_oal.dll OpenAL32.dll
      - run: wget https://github.com/glfw/glfw/releases/download/$GLFW_VERSION/glfw-$GLFW_VERSION.bin.$WARCH.zip
      - run: 7z x glfw-$GLFW_VERSION.bin.$WARCH.zip -o/c/
      - run: cp /c/glfw-$GLFW_VERSION.bin.$WARCH/lib-mingw-w64/libglfw3* ./lib
      - run: cp /c/glfw-$GLFW_VERSION.bin.$WARCH/lib-mingw-w64/glfw3.dll .
      - run: echo "CFLAGS=-I\"/c/openal-soft-$OPENAL_VERSION-bin/include/\" -I\"/c/glfw-$GLFW_VERSION.bin.$WARCH/include/\"" >> $GITHUB_ENV
      - run: echo "LDFLAGS=-L./lib" >> $GITHUB_ENV
      - run: CC=gcc make
