name: CD

on:
  release:
    types: [created]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build_linux:
    strategy:
      matrix:
        architecture: [x86_64, arm64]
    runs-on: ubuntu-22.04-${{ matrix.architecture }}  
    steps:
      - uses: actions/checkout@v4
      - run: echo "VERSION=$(echo ${{ github.event.release.tag_name }} | cut -c 2-)" >> $GITHUB_ENV
      - run: sudo apt-get update -q
      - run: sudo apt-get install libopenal-dev xorg-dev libgl1-mesa-dev libglfw3-dev -y --allow-unauthenticated
      - run: OS=Linux VERSION=$VERSION make bundle

      - name: Upload Release Asset
        uses: alexellis/upload-assets@0.4.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["./ROMBundler-*.zip*"]'

  build_osx:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - run: echo "VERSION=$(echo ${{ github.event.release.tag_name }} | cut -c 2-)" >> $GITHUB_ENV
      - run: OS=OSX VERSION=$VERSION make bundle

      - name: Upload Release Asset
        uses: alexellis/upload-assets@0.4.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["./ROMBundler-*.zip*"]'

  build_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        architecture: [x86, x64]
    steps:
      - uses: actions/checkout@v4
      - run: echo "VERSION=$(echo ${{ github.event.release.tag_name }} | cut -c 2-)" >> $GITHUB_ENV
      - run: echo "WARCH=${{ matrix.architecture == 'x86' && 'WIN32' || 'WIN64' }}" >> $GITHUB_ENV
      - run: echo "OPENAL_VERSION=1.24.2" >> $GITHUB_ENV
      - run: echo "GLFW_VERSION=3.4" >> $GITHUB_ENV
      - run: choco install wget zip --ignore-checksums
      - run: mkdir lib
      - run: wget --no-check-certificate http://www.openal-soft.org/openal-binaries/openal-soft-$OPENAL_VERSION-bin.zip
      - run: 7z x openal-soft-$OPENAL_VERSION-bin.zip -o/c/
      - run: cp /c/openal-soft-$OPENAL_VERSION-bin/libs/$WARCH/* ./lib
      - run: cp /c/openal-soft-$OPENAL_VERSION-bin/bin/$WARCH/soft_oal.dll OpenAL32.dll
      - run: wget https://github.com/glfw/glfw/releases/download/$GLFW_VERSION/glfw-$GLFW_VERSION.bin.$WARCH.zip
      - run: 7z x glfw-$GLFW_VERSION.bin.$WARCH.zip -o/c/
      - run: cp /c/glfw-$GLFW_VERSION.bin.$WARCH/lib-mingw-w64/libglfw3* ./lib
      - run: cp /c/glfw-$GLFW_VERSION.bin.$WARCH/lib-mingw-w64/glfw3.dll .
      - run: echo "CFLAGS=-I\"/c/openal-soft-$OPENAL_VERSION-bin/include/\" -I\"/c/glfw-$GLFW_VERSION.bin.$WARCH/include/\"" >> $GITHUB_ENV
      - run: echo "LDFLAGS=-L./lib" >> $GITHUB_ENV
      - run: OS=Windows VERSION=$VERSION CC=gcc make bundle

      - name: Upload Release Asset
        uses: alexellis/upload-assets@0.4.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["./ROMBundler-*.zip*"]'
